// Generated using `moon info`, DON'T EDIT IT
package "moonbitlang/lex/lib/codegen/internal/codeblock_parser"

// Values
fn parse_codeblock(String) -> Array[SubstItem]

// Errors

// Types and methods
pub(all) struct LexEngine {
  graph : Array[(Int) -> (Int, Array[Array[Int]])]
  end_nodes : Array[(Int, Array[((Int, Int), (Int, Int))])?]
  start_tags : Array[Int]
  code_blocks_n : Int
}
fn LexEngine::run(Self, Lexbuf) -> (Int, Array[(Int, Int)])

type Lexbuf
fn Lexbuf::from_string(String) -> Self

pub(all) struct SubstItem {
  start : Int
  end : Int
  desc : SubstItemDesc
}

pub(all) enum SubstItemDesc {
  StartPosOf(String)
  EndPosOf(String)
}

// Type aliases

// Traits

